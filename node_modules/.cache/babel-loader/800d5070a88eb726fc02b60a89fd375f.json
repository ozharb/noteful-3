{"ast":null,"code":"export var findFolder = function findFolder() {\n  var folders = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folder_id = arguments.length > 1 ? arguments[1] : undefined;\n  return folders.find(function (folder) {\n    return folder.id === parseInt(folder_id);\n  });\n};\nexport var findNote = function findNote() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var noteId = arguments.length > 1 ? arguments[1] : undefined;\n  return notes.find(function (note) {\n    return note.id === parseInt(noteId);\n  });\n};\nexport var getNotesForFolder = function getNotesForFolder() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folder_id = arguments.length > 1 ? arguments[1] : undefined;\n  return !folder_id ? notes : notes.filter(function (note) {\n    return note.folder_id === parseInt(folder_id);\n  });\n};\nexport var countNotesForFolder = function countNotesForFolder() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folder_id = arguments.length > 1 ? arguments[1] : undefined;\n  return notes.filter(function (note) {\n    return note.folder_id === parseInt(folder_id);\n  }).length;\n};","map":{"version":3,"sources":["/Users/ozzieharb/Projects/noteful-fullstack/src/notes-helpers.js"],"names":["findFolder","folders","folder_id","find","folder","id","parseInt","findNote","notes","noteId","note","getNotesForFolder","filter","countNotesForFolder","length"],"mappings":"AACA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa;AAAA,MAACC,OAAD,uEAAS,EAAT;AAAA,MAAaC,SAAb;AAAA,SAC1BD,OAAO,CAACE,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,EAAP,KAAcC,QAAQ,CAACJ,SAAD,CAA1B;AAAA,GAAnB,CAD0B;AAAA,CAAnB;AAGP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAACC,KAAD,uEAAO,EAAP;AAAA,MAAWC,MAAX;AAAA,SACxBD,KAAK,CAACL,IAAN,CAAW,UAAAO,IAAI;AAAA,WAAIA,IAAI,CAACL,EAAL,KAAYC,QAAQ,CAACG,MAAD,CAAxB;AAAA,GAAf,CADwB;AAAA,CAAjB;AAGP,OAAO,IAAME,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAACH,KAAD,uEAAO,EAAP;AAAA,MAAWN,SAAX;AAAA,SAChC,CAACA,SAAF,GACIM,KADJ,GAEIA,KAAK,CAACI,MAAN,CAAa,UAAAF,IAAI;AAAA,WAAIA,IAAI,CAACR,SAAL,KAAmBI,QAAQ,CAACJ,SAAD,CAA/B;AAAA,GAAjB,CAH6B;AAAA,CAA1B;AAMP,OAAO,IAAMW,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAACL,KAAD,uEAAO,EAAP;AAAA,MAAWN,SAAX;AAAA,SACnCM,KAAK,CAACI,MAAN,CAAa,UAAAF,IAAI;AAAA,WAAIA,IAAI,CAACR,SAAL,KAAmBI,QAAQ,CAACJ,SAAD,CAA/B;AAAA,GAAjB,EAA6DY,MAD1B;AAAA,CAA5B","sourcesContent":["\nexport const findFolder = (folders=[], folder_id) =>\nfolders.find(folder => folder.id === parseInt(folder_id))\n\nexport const findNote = (notes=[], noteId) =>\nnotes.find(note => note.id === parseInt(noteId))\n\nexport const getNotesForFolder = (notes=[], folder_id) => (\n(!folder_id)\n  ? notes\n  : notes.filter(note => note.folder_id === parseInt(folder_id))\n)\n\nexport const countNotesForFolder = (notes=[], folder_id) =>\nnotes.filter(note => note.folder_id === parseInt(folder_id)).length\n"]},"metadata":{},"sourceType":"module"}