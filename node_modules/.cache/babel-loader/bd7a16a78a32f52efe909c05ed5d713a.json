{"ast":null,"code":"import _classCallCheck from \"/Users/ozzieharb/Projects/noteful-fullstack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ozzieharb/Projects/noteful-fullstack/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ozzieharb/Projects/noteful-fullstack/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ozzieharb/Projects/noteful-fullstack/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ozzieharb/Projects/noteful-fullstack/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ozzieharb/Projects/noteful-fullstack/src/AddFolder.js\";\nimport React from 'react';\nimport NotesContext from './NotesContext';\nimport config from './config';\nimport NotefulForm from './NotefulForm/NotefulForm';\nimport './AddFolder.css';\nimport PropTypes from 'prop-types';\n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddFolder, _React$Component);\n\n  function AddFolder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddFolder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      folderName: {\n        value: ''\n      }\n    };\n\n    _this.setFolderName = function (folderName) {\n      _this.setState({\n        folderName: {\n          value: folderName\n        }\n      });\n    };\n\n    _this.validateFolder = function () {\n      var folderName = _this.state.folderName.value;\n\n      if (folderName.length <= 0) {\n        return '(Please name your folder)';\n      }\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var folder = {\n        title: e.target['folder-name'].value\n      };\n      fetch(\"\".concat(config.API_ENDPOINT, \"/folders\"), {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(folder)\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return res.json();\n      }).then(function (folder) {\n        _this.context.addFolder(folder);\n\n        _this.props.history.push(\"/folder/\".concat(folder.id));\n      }).catch(function (error) {\n        console.error({\n          error: error\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"section\", {\n        className: \"AddFolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Create a folder\"), React.createElement(NotefulForm, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"folder-name-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Folder Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"folder-name-input\",\n        name: \"folder-name\",\n        onChange: function onChange(e) {\n          return _this2.setFolderName(e.target.value);\n        },\n        value: this.state.folderName.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: this.validateFolder(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Add folder\"))));\n    }\n  }]);\n\n  return AddFolder;\n}(React.Component);\n\nAddFolder.contextType = NotesContext;\nAddFolder.defaultProps = {\n  history: {\n    push: function push() {}\n  }\n};\nexport { AddFolder as default };\nAddFolder.defaultProps = {\n  folderName: \"\"\n};\nAddFolder.propTypes = {\n  folderName: PropTypes.string.isRequired,\n  props: PropTypes.shape({\n    history: PropTypes.object\n  })\n};","map":{"version":3,"sources":["/Users/ozzieharb/Projects/noteful-fullstack/src/AddFolder.js"],"names":["React","NotesContext","config","NotefulForm","PropTypes","AddFolder","state","folderName","value","setFolderName","setState","validateFolder","length","handleSubmit","e","preventDefault","folder","title","target","fetch","API_ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","context","addFolder","props","history","push","id","catch","error","console","Component","contextType","defaultProps","propTypes","string","isRequired","shape","object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAO,iBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEqBC,S;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,UAAU,EAAE;AAACC,QAAAA,KAAK,EAAE;AAAR;AADN,K;;UAIVC,a,GAAgB,UAAAF,UAAU,EAAI;AAC1B,YAAKG,QAAL,CAAc;AAACH,QAAAA,UAAU,EAAE;AAACC,UAAAA,KAAK,EAAED;AAAR;AAAb,OAAd;AACH,K;;UACDI,c,GAAiB,YAAM;AACrB,UAAIJ,UAAU,GAAG,MAAKD,KAAL,CAAWC,UAAX,CAAsBC,KAAvC;;AAEM,UAAID,UAAU,CAACK,MAAX,IAAqB,CAAzB,EAA4B;AAExB,eAAO,2BAAP;AACX;AACA,K;;UAWCC,Y,GAAe,UAAAC,CAAC,EAAI;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAEH,CAAC,CAACI,MAAF,CAAS,aAAT,EAAwBV;AADlB,OAAf;AAGAW,MAAAA,KAAK,WAAIjB,MAAM,CAACkB,YAAX,eAAmC;AACtCC,QAAAA,MAAM,EAAE,MAD8B;AAEtCC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAF6B;AAKtCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,MAAf;AALgC,OAAnC,CAAL,CAOGU,IAPH,CAOQ,UAAAC,GAAG,EAAI;AACX,YAAI,CAACA,GAAG,CAACC,EAAT,EACE,OAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAAAZ,CAAC;AAAA,iBAAIgB,OAAO,CAACC,MAAR,CAAejB,CAAf,CAAJ;AAAA,SAAjB,CAAP;AACF,eAAOa,GAAG,CAACE,IAAJ,EAAP;AACD,OAXH,EAYGH,IAZH,CAYQ,UAAAV,MAAM,EAAI;AACd,cAAKgB,OAAL,CAAaC,SAAb,CAAuBjB,MAAvB;;AACA,cAAKkB,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,mBAAmCpB,MAAM,CAACqB,EAA1C;AACD,OAfH,EAgBGC,KAhBH,CAgBS,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc;AAAEA,UAAAA,KAAK,EAALA;AAAF,SAAd;AACD,OAlBH;AAmBD,K;;;;;;;6BAEQ;AAAA;;AACP,aACE;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAK1B,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,mBAAtB;AAA0C,QAAA,IAAI,EAAC,aAA/C;AAA8D,QAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,iBAAI,MAAI,CAACL,aAAL,CAAmBK,CAAC,CAACI,MAAF,CAASV,KAA5B,CAAJ;AAAA,SAAzE;AAAiH,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,UAAX,CAAsBC,KAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF,EAOE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,KAAKG,cAAL,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAPF,CAFF,CADF;AAkBD;;;;EAvEqCX,KAAK,CAACyC,S;;AAAzBpC,S,CAiBdqC,W,GAAczC,Y;AAjBAI,S,CAmBdsC,Y,GAAe;AAClBR,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,gBAAM,CAAG;AADR;AADS,C;SAnBD/B,S;AAyErBA,SAAS,CAACsC,YAAV,GAAyB;AACvBpC,EAAAA,UAAU,EAAE;AADW,CAAzB;AAGAF,SAAS,CAACuC,SAAV,GAAsB;AACpBrC,EAAAA,UAAU,EAAEH,SAAS,CAACyC,MAAV,CAAiBC,UADT;AAEpBZ,EAAAA,KAAK,EAAE9B,SAAS,CAAC2C,KAAV,CAAgB;AACrBZ,IAAAA,OAAO,EAAE/B,SAAS,CAAC4C;AADE,GAAhB;AAFa,CAAtB","sourcesContent":["import React from 'react'\nimport NotesContext from './NotesContext'\nimport config from './config'\nimport NotefulForm from './NotefulForm/NotefulForm'\nimport './AddFolder.css'\nimport PropTypes from 'prop-types';\n\nexport default class AddFolder  extends React.Component{\n  state = {\n    folderName: {value: ''}\n\n};\nsetFolderName = folderName => {\n    this.setState({folderName: {value: folderName, }}); \n};\nvalidateFolder = () => {\n  let folderName = this.state.folderName.value;\n \n        if (folderName.length <= 0) {\n          \n            return '(Please name your folder)';\n}\n}\n\nstatic contextType = NotesContext;\n\nstatic defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      title: e.target['folder-name'].value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n  render() {\n    return (\n      <section className='AddFolder'>\n        <h2>Create a folder</h2>\n        <NotefulForm onSubmit={this.handleSubmit}>\n          <div className='field'>\n            <label htmlFor='folder-name-input'>\n              Folder Name\n            </label>\n            <input type='text' id='folder-name-input' name='folder-name'  onChange={e => this.setFolderName(e.target.value)} value={this.state.folderName.value}/>\n          </div>\n          <div className='buttons'>\n            <button type='submit' disabled={this.validateFolder()}>\n              Add folder\n            </button>\n          </div>\n        </NotefulForm>\n      </section>\n    )\n  }\n}\nAddFolder.defaultProps = {\n  folderName: \"\",\n}\nAddFolder.propTypes = {\n  folderName: PropTypes.string.isRequired,\n  props: PropTypes.shape({\n    history: PropTypes.object,\n  })\n}"]},"metadata":{},"sourceType":"module"}